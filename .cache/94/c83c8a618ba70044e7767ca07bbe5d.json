{"id":"src/components/WebGLFont/vertex/demo-01.glsl","dependencies":[{"name":"/usr/local/d4/aether/ui/pkg/three-txt/package.json","includedInParent":true,"mtime":1582705178986}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n// Variable qualifiers that come with the shader\\nattribute vec2 uv;\\nattribute vec4 position;\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\nvarying vec2 vUv;\\n// We passed this one\\nuniform float time;\\n\\nvoid main() {\\n  vUv = uv;\\n\\n  vec3 p = vec3(position.x, position.y, position.z);\\n\\n  float frequency1 = 0.035;\\n  float amplitude1 = 20.0;\\n  float frequency2 = 0.025;\\n  float amplitude2 = 70.0;\\n\\n  // Oscillate vertices up/down\\n  p.y += (sin(p.x * frequency1 + time) * 0.5 + 0.5) * amplitude1;\\n\\n  // Oscillate vertices inside/outside\\n  p.z += (sin(p.x * frequency2 + time) * 0.5 + 0.5) * amplitude2;\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"src/components/WebGLFont/vertex/demo-01.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"src/components/WebGLFont/vertex/demo-01.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"src/components/WebGLFont/vertex/demo-01.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"src/components/WebGLFont/vertex/demo-01.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"src/components/WebGLFont/vertex/demo-01.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":744},"source":"src/components/WebGLFont/vertex/demo-01.glsl","original":{"line":1,"column":0}}],"sources":{"src/components/WebGLFont/vertex/demo-01.glsl":"module.exports=\"#define GLSLIFY 1\\n// Variable qualifiers that come with the shader\\nattribute vec2 uv;\\nattribute vec4 position;\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\nvarying vec2 vUv;\\n// We passed this one\\nuniform float time;\\n\\nvoid main() {\\n  vUv = uv;\\n\\n  vec3 p = vec3(position.x, position.y, position.z);\\n\\n  float frequency1 = 0.035;\\n  float amplitude1 = 20.0;\\n  float frequency2 = 0.025;\\n  float amplitude2 = 70.0;\\n\\n  // Oscillate vertices up/down\\n  p.y += (sin(p.x * frequency1 + time) * 0.5 + 0.5) * amplitude1;\\n\\n  // Oscillate vertices inside/outside\\n  p.z += (sin(p.x * frequency2 + time) * 0.5 + 0.5) * amplitude2;\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\\n}\";"},"lineCount":null}},"error":null,"hash":"41cd96c4b3b885a5b4b2a968925133ac","cacheData":{"env":{}}}