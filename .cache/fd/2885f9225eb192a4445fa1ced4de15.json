{"id":"nYur","dependencies":[{"name":"/usr/local/d4/code/aether/pkg/three-msdf-demo/package.json","includedInParent":true,"mtime":1584950527995}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.shaders=void 0;var n=\"\\nattribute vec2 uv;\\nattribute vec4 position;\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\nvarying vec2 vUv;\\nuniform float time;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec3 p = vec3(position.x, position.y, position.z);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\\n}\",e=\"\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\n// Variable qualifiers that come with the shader\\nprecision highp float;\\nuniform float opacity;\\nuniform vec3 color;\\nuniform sampler2D map;\\nvarying vec2 vUv;\\n// We passed this one\\nuniform float time;\\n\\n// HSL to RGB color conversion module\\nfloat hue2rgb(float f1, float f2, float hue) {\\n    if (hue < 0.0)\\n        hue += 1.0;\\n    else if (hue > 1.0)\\n        hue -= 1.0;\\n    float res;\\n    if ((6.0 * hue) < 1.0)\\n        res = f1 + (f2 - f1) * 6.0 * hue;\\n    else if ((2.0 * hue) < 1.0)\\n        res = f2;\\n    else if ((3.0 * hue) < 2.0)\\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\\n    else\\n        res = f1;\\n    return res;\\n}\\n\\nvec3 hsl2rgb(vec3 hsl) {\\n    vec3 rgb;\\n\\n    if (hsl.y == 0.0) {\\n        rgb = vec3(hsl.z); // Luminance\\n    } else {\\n        float f2;\\n\\n        if (hsl.z < 0.5)\\n            f2 = hsl.z * (1.0 + hsl.y);\\n        else\\n            f2 = hsl.z + hsl.y - hsl.y * hsl.z;\\n\\n        float f1 = 2.0 * hsl.z - f2;\\n\\n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\\n        rgb.g = hue2rgb(f1, f2, hsl.x);\\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\\n    }\\n    return rgb;\\n}\\n\\nvec3 hsl2rgb(float h, float s, float l) {\\n    return hsl2rgb(vec3(h, s, l));\\n}\\n\\nfloat median(float r, float g, float b) {\\n  return max(min(r, g), min(max(r, g), b));\\n}\\n\\nvoid main() {\\n  // This is the code that comes to produce msdf\\n  vec3 sample = texture2D(map, vUv).rgb;\\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\\n  float alpha = clamp(sigDist/fwidth(sigDist) + 0.5, 0.0, 1.0);\\n\\n  // Colors\\n  vec3 lightBlue = hsl2rgb(202.0 / 360.0, 1.0, 0.5);\\n  vec3 navyBlue = hsl2rgb(238.0 / 360.0, 0.47, 0.31);\\n\\n  // Goes from 1.0 to 0.0 and vice versa\\n  float t = cos(time) * 0.5 + 0.5;\\n\\n  // Interpolate from light to navy blue\\n  vec3 newColor = mix(lightBlue, navyBlue, t);\\n\\n  gl_FragColor = vec4(newColor, alpha * opacity);\\n  if (gl_FragColor.a < 0.0001) discard;\\n}\",r=[{vertex:n,fragment:e},{vertex:n,fragment:e},{vertex:n,fragment:e},{vertex:n,fragment:e},{vertex:n,fragment:e},{vertex:n,fragment:e}];exports.shaders=r;"},"sourceMaps":{"js":{"mappings":[{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":0}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":13}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":20}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":35}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":43}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":56}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":57}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":64}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":68}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":76}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":89}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vert_glsl","original":{"line":1,"column":6},"generated":{"line":1,"column":95}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"src/components/WebGLFont/shaders.mjs","name":"frag_glsl","original":{"line":22,"column":6},"generated":{"line":1,"column":406}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":22,"column":0},"generated":{"line":1,"column":408}},{"source":"src/components/WebGLFont/shaders.mjs","name":"shaders","original":{"line":109,"column":13},"generated":{"line":1,"column":2467}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":23},"generated":{"line":1,"column":2469}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":110,"column":2},"generated":{"line":1,"column":2470}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vertex","original":{"line":110,"column":4},"generated":{"line":1,"column":2471}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vert_glsl","original":{"line":110,"column":12},"generated":{"line":1,"column":2478}},{"source":"src/components/WebGLFont/shaders.mjs","name":"fragment","original":{"line":110,"column":23},"generated":{"line":1,"column":2480}},{"source":"src/components/WebGLFont/shaders.mjs","name":"frag_glsl","original":{"line":110,"column":33},"generated":{"line":1,"column":2489}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":111,"column":2},"generated":{"line":1,"column":2492}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vertex","original":{"line":111,"column":4},"generated":{"line":1,"column":2493}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vert_glsl","original":{"line":111,"column":12},"generated":{"line":1,"column":2500}},{"source":"src/components/WebGLFont/shaders.mjs","name":"fragment","original":{"line":111,"column":23},"generated":{"line":1,"column":2502}},{"source":"src/components/WebGLFont/shaders.mjs","name":"frag_glsl","original":{"line":111,"column":33},"generated":{"line":1,"column":2511}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":112,"column":2},"generated":{"line":1,"column":2514}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vertex","original":{"line":112,"column":4},"generated":{"line":1,"column":2515}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vert_glsl","original":{"line":112,"column":12},"generated":{"line":1,"column":2522}},{"source":"src/components/WebGLFont/shaders.mjs","name":"fragment","original":{"line":112,"column":23},"generated":{"line":1,"column":2524}},{"source":"src/components/WebGLFont/shaders.mjs","name":"frag_glsl","original":{"line":112,"column":33},"generated":{"line":1,"column":2533}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":113,"column":2},"generated":{"line":1,"column":2536}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vertex","original":{"line":113,"column":4},"generated":{"line":1,"column":2537}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vert_glsl","original":{"line":113,"column":12},"generated":{"line":1,"column":2544}},{"source":"src/components/WebGLFont/shaders.mjs","name":"fragment","original":{"line":113,"column":23},"generated":{"line":1,"column":2546}},{"source":"src/components/WebGLFont/shaders.mjs","name":"frag_glsl","original":{"line":113,"column":33},"generated":{"line":1,"column":2555}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":114,"column":2},"generated":{"line":1,"column":2558}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vertex","original":{"line":114,"column":4},"generated":{"line":1,"column":2559}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vert_glsl","original":{"line":114,"column":12},"generated":{"line":1,"column":2566}},{"source":"src/components/WebGLFont/shaders.mjs","name":"fragment","original":{"line":114,"column":23},"generated":{"line":1,"column":2568}},{"source":"src/components/WebGLFont/shaders.mjs","name":"frag_glsl","original":{"line":114,"column":33},"generated":{"line":1,"column":2577}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":115,"column":2},"generated":{"line":1,"column":2580}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vertex","original":{"line":115,"column":4},"generated":{"line":1,"column":2581}},{"source":"src/components/WebGLFont/shaders.mjs","name":"vert_glsl","original":{"line":115,"column":12},"generated":{"line":1,"column":2588}},{"source":"src/components/WebGLFont/shaders.mjs","name":"fragment","original":{"line":115,"column":23},"generated":{"line":1,"column":2590}},{"source":"src/components/WebGLFont/shaders.mjs","name":"frag_glsl","original":{"line":115,"column":33},"generated":{"line":1,"column":2599}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":2603}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":2611}},{"source":"src/components/WebGLFont/shaders.mjs","original":{"line":109,"column":7},"generated":{"line":1,"column":2619}}],"sources":{"src/components/WebGLFont/shaders.mjs":"const vert_glsl = `\nattribute vec2 uv;\nattribute vec4 position;\nuniform mat4 projectionMatrix;\nuniform mat4 modelViewMatrix;\nvarying vec2 vUv;\nuniform float time;\n\nvoid main() {\n  vUv = uv;\n  vec3 p = vec3(position.x, position.y, position.z);\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(p, 1.0);\n}`\n// import vertex2 from \"./vertex/demo-02.glsl\";\n// import vertex3 from \"./vertex/demo-03.glsl\";\n// import vertex4 from \"./vertex/demo-04.glsl\";\n// import vertex5 from \"./vertex/demo-05.glsl\";\n// import vertex6 from \"./vertex/demo-06.glsl\";\n\n\nconst frag_glsl = `\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n// Variable qualifiers that come with the shader\nprecision highp float;\nuniform float opacity;\nuniform vec3 color;\nuniform sampler2D map;\nvarying vec2 vUv;\n// We passed this one\nuniform float time;\n\n// HSL to RGB color conversion module\nfloat hue2rgb(float f1, float f2, float hue) {\n    if (hue < 0.0)\n        hue += 1.0;\n    else if (hue > 1.0)\n        hue -= 1.0;\n    float res;\n    if ((6.0 * hue) < 1.0)\n        res = f1 + (f2 - f1) * 6.0 * hue;\n    else if ((2.0 * hue) < 1.0)\n        res = f2;\n    else if ((3.0 * hue) < 2.0)\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n    else\n        res = f1;\n    return res;\n}\n\nvec3 hsl2rgb(vec3 hsl) {\n    vec3 rgb;\n\n    if (hsl.y == 0.0) {\n        rgb = vec3(hsl.z); // Luminance\n    } else {\n        float f2;\n\n        if (hsl.z < 0.5)\n            f2 = hsl.z * (1.0 + hsl.y);\n        else\n            f2 = hsl.z + hsl.y - hsl.y * hsl.z;\n\n        float f1 = 2.0 * hsl.z - f2;\n\n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\n        rgb.g = hue2rgb(f1, f2, hsl.x);\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\n    }\n    return rgb;\n}\n\nvec3 hsl2rgb(float h, float s, float l) {\n    return hsl2rgb(vec3(h, s, l));\n}\n\nfloat median(float r, float g, float b) {\n  return max(min(r, g), min(max(r, g), b));\n}\n\nvoid main() {\n  // This is the code that comes to produce msdf\n  vec3 sample = texture2D(map, vUv).rgb;\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n  float alpha = clamp(sigDist/fwidth(sigDist) + 0.5, 0.0, 1.0);\n\n  // Colors\n  vec3 lightBlue = hsl2rgb(202.0 / 360.0, 1.0, 0.5);\n  vec3 navyBlue = hsl2rgb(238.0 / 360.0, 0.47, 0.31);\n\n  // Goes from 1.0 to 0.0 and vice versa\n  float t = cos(time) * 0.5 + 0.5;\n\n  // Interpolate from light to navy blue\n  vec3 newColor = mix(lightBlue, navyBlue, t);\n\n  gl_FragColor = vec4(newColor, alpha * opacity);\n  if (gl_FragColor.a < 0.0001) discard;\n}`\n// import fragment2 from \"./fragment/demo-02.glsl\";\n// import fragment3 from \"./fragment/demo-03.glsl\";\n// import fragment4 from \"./fragment/demo-04.glsl\";\n// import fragment5 from \"./fragment/demo-05.glsl\";\n// import fragment6 from \"./fragment/demo-06.glsl\";\n\nexport const shaders = [\n  { vertex: vert_glsl, fragment: frag_glsl },\n  { vertex: vert_glsl, fragment: frag_glsl },\n  { vertex: vert_glsl, fragment: frag_glsl },\n  { vertex: vert_glsl, fragment: frag_glsl },\n  { vertex: vert_glsl, fragment: frag_glsl },\n  { vertex: vert_glsl, fragment: frag_glsl }\n];\n\n"},"lineCount":null}},"error":null,"hash":"7397bcbbed9587d38f32b959a7dbec9d","cacheData":{"env":{}}}