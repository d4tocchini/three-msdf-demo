{"id":"src/components/WebGLFont/fragment/demo-02.glsl","dependencies":[{"name":"/usr/local/d4/aether/ui/pkg/three-txt/package.json","includedInParent":true,"mtime":1582705178986}],"generated":{"js":"module.exports = \"#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nuniform float opacity;\\nuniform vec3 color;\\nuniform sampler2D map;\\nvarying vec2 vUv;\\nuniform float time;\\n\\nfloat median(float r, float g, float b) {\\n  return max(min(r, g), min(max(r, g), b));\\n}\\n\\nvoid main() {\\n  vec3 sample = texture2D(map, vUv).rgb;\\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\\n  float alpha = clamp(sigDist/fwidth(sigDist) + 0.5, 0.0, 1.0);\\n  gl_FragColor = vec4(color.xyz, alpha * opacity);\\n  if (gl_FragColor.a < 0.0001) discard;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"src/components/WebGLFont/fragment/demo-02.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"src/components/WebGLFont/fragment/demo-02.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"src/components/WebGLFont/fragment/demo-02.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"src/components/WebGLFont/fragment/demo-02.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"src/components/WebGLFont/fragment/demo-02.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":640},"source":"src/components/WebGLFont/fragment/demo-02.glsl","original":{"line":1,"column":0}}],"sources":{"src/components/WebGLFont/fragment/demo-02.glsl":"module.exports=\"#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n#endif\\n\\nprecision highp float;\\n#define GLSLIFY 1\\nuniform float opacity;\\nuniform vec3 color;\\nuniform sampler2D map;\\nvarying vec2 vUv;\\nuniform float time;\\n\\nfloat median(float r, float g, float b) {\\n  return max(min(r, g), min(max(r, g), b));\\n}\\n\\nvoid main() {\\n  vec3 sample = texture2D(map, vUv).rgb;\\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\\n  float alpha = clamp(sigDist/fwidth(sigDist) + 0.5, 0.0, 1.0);\\n  gl_FragColor = vec4(color.xyz, alpha * opacity);\\n  if (gl_FragColor.a < 0.0001) discard;\\n}\";"},"lineCount":null}},"error":null,"hash":"0566c0ecda49dfc3c378357678c8ed5b","cacheData":{"env":{}}}